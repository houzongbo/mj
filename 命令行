grep: 正则化查找文件中符合的字符串

      -a: 不忽略二进制数据
      -A num：匹配到的行加上后面 num行
      -B num：匹配到的行加上前面num行
      -b：在匹配行前标示出第一个字符的编号
      
      -C num：匹配前后num行
      
      -d 动作：查找目录，动作默认读
      
      -e 范式：指定字符串作为查找样式
      -E：扩展正则表达式egrep
      -f 规则文件： 内容含有一个或多个规则样式
      -F：指定字符串作为固定样式
      
      -G：样式视为固定字符串
      
      -h：不显示文件名 行之前
      -H：显示文件名  行之前
      
      -i：忽略大小写
      -I：返回符合样式文件名称
      
      -L：不符合样式文件名称
      -n：显示行号
      -o：只匹配样式
      -q：不显示任何信息
      -r： -d recursive
      -s：不显示错误信息
      
      -v：显示不匹配的所有行
      -V：显示版本信息
      -w：只显示 全字符合的单词，两边必须非字符
      -x：匹配整行


文件查找 find： 对路径递归遍历目录树，根据文件计算表达式

        -name 名字
        -user 用户
        -perm 文件权限
        -group 文件
        -type 类型   b块设备   d目录 c字符设备  p管道 f普通文件
        -size 大小
      
  

vim：
  1 一般模式，刚启动时状态：
            i，a，o，r：切换到输入模式
            i：光标处输入    I：所在行第一个非空格处输入
            a：光标下一个字符输入   A：所在行最后一个字符
            o：光标下一行输入新一行  O：光标上新加一行
            r: 替换模式，只替换光标一处   R：一直处于替换模式
            
            
            ：切换到命令行模式，输入命令
            
       移动光标：
            n《space》 ： 光标移动n字符
            n《enter》：光标移动n行
            H   M   L 移动到屏幕
            G：移动到文件最后一行
            nG：移动n行
            gg：移动到第一行            
            HOME：行首  END：行尾   0 : 行首/ $ : 行尾 
            Page up/ page down  翻页 ctrl+b/ctrl+f    ctrl+u/ctrl+d 翻半页
        
       查找替换：
            /word: 向下寻找字符串
            ？word：向上找字符串
            ：n1,n2s/word1/word2/g    n1行和n2行之间找word1 替换为word2
            ：1,$s/word1/word2/g    全文档搜索word1 替换word2
       
       删除，复制，粘贴：
            x：向后删除光标位置DEL    X：向前删除一个字符backspace
            nx 连续向后删除n字符
            dd 删除整行
            ndd 删除光标下n行
            d1G 删除第一行
            dG 删除最后一行
            d$ 删除游标到行尾
            d0 删除行首到游标
            
            yy 复制游标行
            nyy 复制游标以下n行
            y1G 复制第一行
            yG 复制最后一行
            y0 复制行首到游标
            y$ 复制游标到行尾
            
            
            p：粘贴光标下一行
            P：粘贴到光标上一行，行号进行下移
            J： 光标行和下一行合并
            
       特殊：     
            u：复原前动作
            ctrl+r 重复上个动作
            。 重复前一个动作
            
        
            
  2 编辑模式，
            DEL；删除光标后一个字符
            HOME：行首  END：行尾   
            Page up/ page down  翻页 
            insert：就是输入或替换模式
            ESC：进入命令状态
            
    
 3 指令行模式，
            :w 保存文件
            :q 退出程序
            :wq保存退出
            :q! 不保存强退
            
            :set nu 显示行号
  
  
  
  
Linux查询磁盘空间：  
          df -h 以已挂载磁盘分区为单位查看文件系统
          df -hl 查看磁盘剩余空间
          du -sh【目录】 目录大小
          du -sm【文件夹】 文件总数
          du -h[目录]  目录下的所有文件大小
          
          fdisk -l 查看详细磁盘信息
                -n 创建新分区
                -d 删除分区
          lsblk 以树形结构列出所有可用块设备， 方便查看所有的磁盘分区
          
          
          

lsof：列出当前系统打开文件，linux环境任何事物都是文件（二进制数据包）

          -a 打开的文件中的进程
          -c《进程》 进程打开文件
          -d<文件号>
          -d<目录>
          -i<条件> 符合条件进程





查询cpu和内存：
          top是经常使用的性能分析工具，实时监控进程状态
          
          -i 设置时间间隔
          -u 用户名
          -p 指定进程
          -n 循环次数
          

          第一行：任务队列信息， 当前系统时间， 系统运行时间， 用户数量，负载情况
          
          第二行：进程信息，  进程数，运行，阻塞，就绪，僵尸
          
          第三行：cpu状态信息， us用户空间占用   sy内核空间占用  id空闲占比   ni改变优先级占比
                                wa io等待占比    hi硬中断占比   si软中断占比
                                
          第四行：内存状态  total 物理内存总量     used使用中   free空闲量     buff/cache缓存总量
          
          第五行： swap交换分区信息  total   free    use
          
          后面的都是各进程的状态监控
          pid   user   pr优先级    virt虚拟内存总量   res使用中的物理内存  shr共享内存大小  
          进程状态 d不可中断睡眠  r运行  s睡眠   t跟踪  z僵尸     
          %cpu  上次更新到现在cpu时间占比
          %mem   物理内存占比
          TIME+  cpu时间总计
          COMMAND   进程名称
          
          
单独查看进程： ps  a所有进程   e 环境变量  u用户进程  au详细信息       
          
单独查看内存：  free显示   物理内存 和交换内存 以及缓冲区

            -b k m g 单位
            -s 时间间隔
          

查看网络端口进程 netstat：
                    -a连接的socket  -t tcp   -u udp   -n直接使用ip地址   -l listen监控
          

配置网络接口 ifconfig：
                        连接类型  mac  ip  子网  掩码





          
